/* tslint:disable */
/* eslint-disable */
/**
 * Trusted Twin API
 * TT API Gateway.
 *
 * The version of the OpenAPI document: 2.13.00
 * Contact: hello@trustedtwin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LedgerInclude } from './LedgerInclude';
import {
    LedgerIncludeFromJSON,
    LedgerIncludeFromJSONTyped,
    LedgerIncludeToJSON,
} from './LedgerInclude';

/**
 * Ledger's reference key
 * @export
 * @interface IncludeEntry
 */
export interface IncludeEntry {
    /**
     * 
     * @type {LedgerInclude}
     * @memberof IncludeEntry
     */
    include?: LedgerInclude;
    /**
     * value from include source
     * @type {string}
     * @memberof IncludeEntry
     */
    value?: string;
    /**
     * UTC timestamp denoting when the Entry was created
     * @type {number}
     * @memberof IncludeEntry
     */
    readonly entryCreatedTs?: number;
    /**
     * UTC timestamp denoting when the Entry was last updated
     * @type {number}
     * @memberof IncludeEntry
     */
    readonly entryUpdatedTs?: number;
    /**
     * UTC timestamp denoting when the Entry's value was last changed
     * @type {number}
     * @memberof IncludeEntry
     */
    readonly valueChangedTs?: number;
}

/**
 * Check if a given object implements the IncludeEntry interface.
 */
export function instanceOfIncludeEntry(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IncludeEntryFromJSON(json: any): IncludeEntry {
    return IncludeEntryFromJSONTyped(json, false);
}

export function IncludeEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncludeEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'include': !exists(json, 'include') ? undefined : LedgerIncludeFromJSON(json['include']),
        'value': !exists(json, 'value') ? undefined : json['value'],
        'entryCreatedTs': !exists(json, 'entry_created_ts') ? undefined : json['entry_created_ts'],
        'entryUpdatedTs': !exists(json, 'entry_updated_ts') ? undefined : json['entry_updated_ts'],
        'valueChangedTs': !exists(json, 'value_changed_ts') ? undefined : json['value_changed_ts'],
    };
}

export function IncludeEntryToJSON(value?: IncludeEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'include': LedgerIncludeToJSON(value.include),
        'value': value.value,
    };
}

