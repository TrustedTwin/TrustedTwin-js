/* tslint:disable */
/* eslint-disable */
/**
 * Trusted Twin API
 * TT API Gateway.
 *
 * The version of the OpenAPI document: 2.13.00
 * Contact: hello@trustedtwin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostNewRoleStatement
 */
export interface PostNewRoleStatement {
    /**
     * allows or denies to perform given operations
     * @type {string}
     * @memberof PostNewRoleStatement
     */
    effect?: PostNewRoleStatementEffectEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostNewRoleStatement
     */
    actions?: Array<string>;
}


/**
 * @export
 */
export const PostNewRoleStatementEffectEnum = {
    Allow: 'allow',
    Deny: 'deny'
} as const;
export type PostNewRoleStatementEffectEnum = typeof PostNewRoleStatementEffectEnum[keyof typeof PostNewRoleStatementEffectEnum];


/**
 * Check if a given object implements the PostNewRoleStatement interface.
 */
export function instanceOfPostNewRoleStatement(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostNewRoleStatementFromJSON(json: any): PostNewRoleStatement {
    return PostNewRoleStatementFromJSONTyped(json, false);
}

export function PostNewRoleStatementFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostNewRoleStatement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'effect': !exists(json, 'effect') ? undefined : json['effect'],
        'actions': !exists(json, 'actions') ? undefined : json['actions'],
    };
}

export function PostNewRoleStatementToJSON(value?: PostNewRoleStatement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'effect': value.effect,
        'actions': value.actions,
    };
}

