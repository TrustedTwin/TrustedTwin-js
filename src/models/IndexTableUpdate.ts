/* tslint:disable */
/* eslint-disable */
/**
 * Trusted Twin API
 * TT API Gateway.
 *
 * The version of the OpenAPI document: 2.13.00
 * Contact: hello@trustedtwin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IndexColumns } from './IndexColumns';
import {
    IndexColumnsFromJSON,
    IndexColumnsFromJSONTyped,
    IndexColumnsToJSON,
} from './IndexColumns';
import type { IndexTemplates } from './IndexTemplates';
import {
    IndexTemplatesFromJSON,
    IndexTemplatesFromJSONTyped,
    IndexTemplatesToJSON,
} from './IndexTemplates';

/**
 * 
 * @export
 * @interface IndexTableUpdate
 */
export interface IndexTableUpdate {
    /**
     * Rule
     * @type {string}
     * @memberof IndexTableUpdate
     */
    rule?: string;
    /**
     * 
     * @type {IndexColumns}
     * @memberof IndexTableUpdate
     */
    properties?: IndexColumns;
    /**
     * 
     * @type {IndexTemplates}
     * @memberof IndexTableUpdate
     */
    templates?: IndexTemplates;
}

/**
 * Check if a given object implements the IndexTableUpdate interface.
 */
export function instanceOfIndexTableUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IndexTableUpdateFromJSON(json: any): IndexTableUpdate {
    return IndexTableUpdateFromJSONTyped(json, false);
}

export function IndexTableUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexTableUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rule': !exists(json, 'rule') ? undefined : json['rule'],
        'properties': !exists(json, 'properties') ? undefined : IndexColumnsFromJSON(json['properties']),
        'templates': !exists(json, 'templates') ? undefined : IndexTemplatesFromJSON(json['templates']),
    };
}

export function IndexTableUpdateToJSON(value?: IndexTableUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rule': value.rule,
        'properties': IndexColumnsToJSON(value.properties),
        'templates': IndexTemplatesToJSON(value.templates),
    };
}

