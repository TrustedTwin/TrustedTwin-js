/* tslint:disable */
/* eslint-disable */
/**
 * Trusted Twin API
 * This documentation describes API endpoints of the Trusted Twin platform.
 *
 * The version of the OpenAPI document: 2.02.00
 * Contact: api@trustedtwin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Description,
    DescriptionFromJSON,
    DescriptionFromJSONTyped,
    DescriptionToJSON,
} from './Description';
import {
    TwinCreationCertificate,
    TwinCreationCertificateFromJSON,
    TwinCreationCertificateFromJSONTyped,
    TwinCreationCertificateToJSON,
} from './TwinCreationCertificate';
import {
    TwinTerminationCertificate,
    TwinTerminationCertificateFromJSON,
    TwinTerminationCertificateFromJSONTyped,
    TwinTerminationCertificateToJSON,
} from './TwinTerminationCertificate';

/**
 * 
 * @export
 * @interface Twin
 */
export interface Twin {
    /**
     * Current Twin status
     * @type {string}
     * @memberof Twin
     */
    readonly status?: TwinStatusEnum;
    /**
     * Account UUID of current Twin owner
     * @type {string}
     * @memberof Twin
     */
    readonly owner?: string;
    /**
     * UTC timestamp denoting when the Twin was last updated
     * @type {number}
     * @memberof Twin
     */
    updatedTs?: number;
    /**
     * 
     * @type {Description}
     * @memberof Twin
     */
    description?: Description;
    /**
     * 
     * @type {TwinCreationCertificate}
     * @memberof Twin
     */
    creationCertificate?: TwinCreationCertificate;
    /**
     * 
     * @type {TwinTerminationCertificate}
     * @memberof Twin
     */
    terminationCertificate?: TwinTerminationCertificate;
}


/**
 * @export
 */
export const TwinStatusEnum = {
    Alive: 'alive',
    Terminated: 'terminated'
} as const;
export type TwinStatusEnum = typeof TwinStatusEnum[keyof typeof TwinStatusEnum];


export function TwinFromJSON(json: any): Twin {
    return TwinFromJSONTyped(json, false);
}

export function TwinFromJSONTyped(json: any, ignoreDiscriminator: boolean): Twin {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'updatedTs': !exists(json, 'updated_ts') ? undefined : json['updated_ts'],
        'description': !exists(json, 'description') ? undefined : DescriptionFromJSON(json['description']),
        'creationCertificate': !exists(json, 'creation_certificate') ? undefined : TwinCreationCertificateFromJSON(json['creation_certificate']),
        'terminationCertificate': !exists(json, 'termination_certificate') ? undefined : TwinTerminationCertificateFromJSON(json['termination_certificate']),
    };
}

export function TwinToJSON(value?: Twin | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'updated_ts': value.updatedTs,
        'description': DescriptionToJSON(value.description),
        'creation_certificate': TwinCreationCertificateToJSON(value.creationCertificate),
        'termination_certificate': TwinTerminationCertificateToJSON(value.terminationCertificate),
    };
}

