/* tslint:disable */
/* eslint-disable */
/**
 * Trusted Twin API
 * This documentation describes API endpoints of the Trusted Twin platform.
 *
 * The version of the OpenAPI document: 2.03.01
 * Contact: api@trustedtwin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PostNewUser,
    PostNewUserFromJSON,
    PostNewUserFromJSONTyped,
    PostNewUserToJSON,
} from './PostNewUser';
import {
    UserDefinitionAllOf,
    UserDefinitionAllOfFromJSON,
    UserDefinitionAllOfFromJSONTyped,
    UserDefinitionAllOfToJSON,
} from './UserDefinitionAllOf';
import {
    UserDefinitionAllOf1,
    UserDefinitionAllOf1FromJSON,
    UserDefinitionAllOf1FromJSONTyped,
    UserDefinitionAllOf1ToJSON,
} from './UserDefinitionAllOf1';

/**
 * 
 * @export
 * @interface UserDefinition
 */
export interface UserDefinition {
    /**
     * User UUID
     * @type {string}
     * @memberof UserDefinition
     */
    uuid?: string;
    /**
     * Role UUID
     * @type {string}
     * @memberof UserDefinition
     */
    role: string;
    /**
     * Account UUID
     * @type {string}
     * @memberof UserDefinition
     */
    account?: string;
    /**
     * Optional User name (doesn't have to be unique), must conform to '^[0-9A-Za-z][0-9A-Za-z_ \-]{0,30}[0-9A-Za-z]*$'
     * @type {string}
     * @memberof UserDefinition
     */
    name?: string;
    /**
     * Custom defined variables
     * @type {{ [key: string]: string; }}
     * @memberof UserDefinition
     */
    description?: { [key: string]: string; };
    /**
     * UTC timestamp denoting when User was created
     * @type {number}
     * @memberof UserDefinition
     */
    createdTs?: number;
    /**
     * UTC timestamp denoting when User was last updated
     * @type {number}
     * @memberof UserDefinition
     */
    updatedTs?: number;
}

export function UserDefinitionFromJSON(json: any): UserDefinition {
    return UserDefinitionFromJSONTyped(json, false);
}

export function UserDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDefinition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'role': json['role'],
        'account': !exists(json, 'account') ? undefined : json['account'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'createdTs': !exists(json, 'created_ts') ? undefined : json['created_ts'],
        'updatedTs': !exists(json, 'updated_ts') ? undefined : json['updated_ts'],
    };
}

export function UserDefinitionToJSON(value?: UserDefinition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'role': value.role,
        'account': value.account,
        'name': value.name,
        'description': value.description,
        'created_ts': value.createdTs,
        'updated_ts': value.updatedTs,
    };
}

